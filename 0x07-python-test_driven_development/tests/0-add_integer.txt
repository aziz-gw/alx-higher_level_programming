HELP ON THE ADD_INTEGER MODULE

The module contains only one function called `add_integer` which adds two numbers (both integers) and returns the result of their addition.

It works with both integers and floats (which are casted to integers before addition).


>>> add_integer = __import__('0-add_integer').add_integer


Integers
========
>>> add_integer(4, 3)
7

>>> add_integer(2, -3)
-1


Floating-point values
=====================
>>> add_integer(2.0, 3.0)
5


Floats to integers before addition
==================================
>>> add_integer(2.9, 0.2)
2


Floating and non-floating point values
======================================
>>> add_integer(2.3, -3)
-1


Second argument as optional (default is 98)
===========================================
>>> add_integer(2)
100


Non-integer and non-float arguments
===================================
>>> add_integer("hello", 3)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(2, "hello")
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer(None)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(2.3, None)
Traceback (most recent call last):
TypeError: b must be an integer


Infinity and NaN
================
>>> add_integer(float('inf'))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

>>> add_integer(2, float('inf'))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

>>> add_integer(float('nan'))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer

>>> add_integer(2, float('nan'))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer
